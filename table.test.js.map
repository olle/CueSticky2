{"version":3,"sources":["vector.js","pocket.js","table.js","table.test.js"],"names":["neu","a","bi","dot","v1","v2","add","sub","abs","Math","sqrt","mul","u","POCKET_RADIUS","x","y","position","vec","radius","WALL_WIDTH_N_HEIGHT","dim","pad","pockets","map","v","pocket","describe","it","t","expect","length","toEqual"],"mappings":";AAoBC,aAjBM,SAASA,EAAIC,EAAGC,GACd,MAAA,CAAED,EAAGA,EAAGC,GAAIA,GAEd,SAASC,EAAIC,EAAIC,GACfD,OAAAA,EAAGH,EAAII,EAAGJ,EAAIG,EAAGF,GAAKG,EAAGH,GAE3B,SAASI,EAAIF,EAAIC,GACfL,OAAAA,EAAII,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,GAAKG,EAAGH,IAE9B,SAASK,EAAIH,EAAIC,GACfL,OAAAA,EAAII,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,GAAKG,EAAGH,IAE9B,SAASM,EAAIJ,GACXK,OAAAA,KAAKC,KAAKN,EAAGH,EAAIG,EAAGH,EAAIG,EAAGF,GAAKE,EAAGF,IAErC,SAASS,EAAIP,EAAIQ,GACfZ,OAAAA,EAAII,EAAGH,EAAIW,EAAGR,EAAGF,GAAKU,GAC9B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA;;ACRA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EATD,IAAA,EAAA,EAAA,QAAA,aASC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAPD,IAAMC,EAAgB,MAEf,SAASb,EAAIc,EAAGC,GACd,MAAA,CACLC,SAAUC,EAAIjB,IAAIc,EAAGC,GACrBG,OAAQL;;ACWX,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAlBD,IAAA,EAAA,EAAA,QAAA,aAkBC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAhBD,IAAMM,EAAsB,IAErB,SAASnB,IACVoB,IACAC,EAAMF,EAAsB,EAWzB,MAAA,CAAEG,QAVA,CACP,CAAC,EAHOH,EAGGE,EAAK,EAHRF,EAGkBE,GAC1B,CAAC,EAJOF,EAIGE,EAAK,EAJRF,EAIkBE,GAC1B,CAAC,EAAG,EALIF,GAMR,CAAC,EAAG,EANIA,GAOR,CAAC,EAPOA,EAOGE,EAAK,EAPRF,EAOkBE,GAC1B,CAAC,EAROF,EAQGE,EAAK,EARRF,EAQkBE,IAC1BE,IAAI,SAAAC,GACGC,OAAAA,EAAOzB,IAAIwB,EAAE,GAAIA,EAAE;;AChB9B,aAFA,IAAA,EAAA,QAAA,WAEAE,SAAS,QAAS,WAChBC,GAAG,2BAA4B,WACzBC,IAAAA,GAAI,EAAR,EAAA,OACAC,OAAOD,EAAEN,QAAQQ,QAAQC,QAAQ","file":"table.test.js","sourceRoot":"../src","sourcesContent":["/**\n * A vector (math) implementation, bleh!\n */\nexport function neu(a, bi) {\n  return { a: a, bi: bi };\n}\nexport function dot(v1, v2) {\n  return v1.a * v2.a + v1.bi * v2.bi;\n}\nexport function add(v1, v2) {\n  return neu(v1.a + v2.a, v1.bi + v2.bi);\n}\nexport function sub(v1, v2) {\n  return neu(v1.a - v2.a, v1.bi - v2.bi);\n}\nexport function abs(v1) {\n  return Math.sqrt(v1.a * v1.a + v1.bi * v1.bi);\n}\nexport function mul(v1, u) {\n  return neu(v1.a * u, v1.bi * u);\n}\n","/**\n * A pool table pocket.\n */\nimport * as vec from \"./vector\";\n\nconst POCKET_RADIUS = 0.0485;\n\nexport function neu(x, y) {\n  return {\n    position: vec.neu(x, y),\n    radius: POCKET_RADIUS\n  };\n}\n","/**\n * A pool table.\n */\nimport * as pocket from \"./pocket\";\n\nconst WALL_WIDTH_N_HEIGHT = 0.05;\n\nexport function neu() {\n  let dim = WALL_WIDTH_N_HEIGHT;\n  let pad = WALL_WIDTH_N_HEIGHT / 3;\n  var ps = [\n    [0 + dim + pad, 0 + dim + pad],\n    [0 + dim + pad, 1 - dim - pad],\n    [1, 0 + dim],\n    [1, 1 - dim],\n    [2 - dim - pad, 0 + dim + pad],\n    [2 - dim - pad, 1 - dim - pad]\n  ].map(v => {\n    return pocket.neu(v[0], v[1]);\n  });\n  return { pockets: ps };\n}\n","import { neu } from \"./table\"\n\ndescribe(\"table\", () => {\n  it(\"has 6 pockets by default\", () => {\n    let t = neu();\n    expect(t.pockets.length).toEqual(6);\n  });\n});"]}