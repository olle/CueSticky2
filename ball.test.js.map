{"version":3,"sources":["vector.js","ball.js","ball.test.js"],"names":["neu","a","bi","dot","v1","v2","add","sub","abs","Math","sqrt","mul","u","BALL_RADIUS","radius","mass","position","vec","velocity","move","ball","delta","alpha","dt","bounce","b1","b2","posDiff","velDiff","dp1","dist","bounds","force","dp2","q","b1v","b2v","wall","b","x","y","dim","vv","hv","pocket","p","describe","it","expect","toEqual"],"mappings":";AAoBC,aAjBM,SAASA,EAAIC,EAAGC,GACd,MAAA,CAAED,EAAGA,EAAGC,GAAIA,GAEd,SAASC,EAAIC,EAAIC,GACfD,OAAAA,EAAGH,EAAII,EAAGJ,EAAIG,EAAGF,GAAKG,EAAGH,GAE3B,SAASI,EAAIF,EAAIC,GACfL,OAAAA,EAAII,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,GAAKG,EAAGH,IAE9B,SAASK,EAAIH,EAAIC,GACfL,OAAAA,EAAII,EAAGH,EAAII,EAAGJ,EAAGG,EAAGF,GAAKG,EAAGH,IAE9B,SAASM,EAAIJ,GACXK,OAAAA,KAAKC,KAAKN,EAAGH,EAAIG,EAAGH,EAAIG,EAAGF,GAAKE,EAAGF,IAErC,SAASS,EAAIP,EAAIQ,GACfZ,OAAAA,EAAII,EAAGH,EAAIW,EAAGR,EAAGF,GAAKU,GAC9B,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA,EAAA,QAAA,IAAA;;ACsCA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,EAAA,QAAA,KAAA,EAAA,QAAA,OAAA,EAAA,QAAA,KAAA,EAAA,QAAA,OAAA,EAvDD,IAAA,EAAA,EAAA,QAAA,aAuDC,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,EAAA,GAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,GAAA,CAAA,IAAA,EAAA,OAAA,gBAAA,OAAA,yBAAA,OAAA,yBAAA,EAAA,GAAA,GAAA,EAAA,KAAA,EAAA,IAAA,OAAA,eAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAAA,QAAA,EAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,OAAA,KAAA,GAAA,mBAAA,OAAA,wBAAA,EAAA,EAAA,OAAA,OAAA,sBAAA,GAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,eAAA,EAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EArDD,IAAMC,EAAc,KAEb,SAASb,IACP,MAAA,CACLc,OAAQD,EACRE,KAAMF,EAAcA,EACpBG,SAAUC,EAAIjB,IAAI,EAAG,GACrBkB,SAAUD,EAAIjB,IAAI,EAAG,IAIlB,SAASmB,EAAKC,EAAMC,EAAOC,GAC5BC,IAAAA,EAAKN,EAAIN,IAAIS,EAAKF,SAAUG,GAGpBD,OAAAA,EAAAA,GAAAA,EAAZ,CAAkBJ,SAFRC,EAAIX,IAAIc,EAAKJ,SAAUO,GAEAL,SADvBD,EAAIN,IAAIS,EAAKF,SAAUI,KAI5B,SAASE,EAAOC,EAAIC,GACrBC,IAAAA,EAAUV,EAAIV,IAAImB,EAAGV,SAAUS,EAAGT,UAClCY,EAAUX,EAAIV,IAAImB,EAAGR,SAAUO,EAAGP,UAClCW,EAAMZ,EAAId,IAAIyB,EAASD,GACvBG,EAAOb,EAAIT,IAAIS,EAAIV,IAAIkB,EAAGT,SAAUU,EAAGV,WACvCe,EAASL,EAAGZ,OAASW,EAAGX,OACxBe,GAAAA,EAAM,GAAKC,EAAOC,EAAQ,CACxBC,IAAAA,EAAS,EAAIN,EAAGX,MAASU,EAAGV,KAAOW,EAAGX,MACtCkB,EAAMhB,EAAId,IAAIyB,EAASD,GAAWV,EAAId,IAAIwB,EAASA,GACnDO,EAAIjB,EAAIN,IAAIgB,EAASM,GACrBE,EAAMlB,EAAIX,IAAImB,EAAGP,SAAUD,EAAIN,IAAIuB,EAAGF,IACtCI,EAAMnB,EAAIV,IAAImB,EAAGR,SAAUD,EAAIN,IAAIuB,EAAGF,IACnC,MAAA,CAAMP,EAAAA,GAAAA,EAAN,CAAUP,SAAUiB,IAAYT,EAAAA,GAAAA,EAAhC,CAAoCR,SAAUkB,KAEhD,MAAA,CAACX,EAAIC,GAGP,SAASW,EAAKC,EAAGC,EAAGC,EAAGC,GACxBC,IAAAA,EAAKJ,EAAEpB,SAAShB,GAChByC,EAAKL,EAAEpB,SAASjB,EAEjBqC,OAAAA,EAAEtB,SAASd,GAAKoC,EAAExB,OAAS2B,GAAOC,EAAK,GACvCJ,EAAEtB,SAASd,GAAKoC,EAAExB,OAAS0B,EAAIC,GAAOC,EAAK,EAEhCJ,EAAAA,GAAAA,EAAZ,CAAepB,SAAeoB,EAAAA,GAAAA,EAAEpB,SAAT,CAAmBhB,IAAKwC,MAE9CJ,EAAEtB,SAASf,EAAIqC,EAAExB,OAAS2B,GAAOE,EAAK,GACtCL,EAAEtB,SAASf,EAAIqC,EAAExB,OAASyB,EAAIE,GAAOE,EAAK,EAE/BL,EAAAA,GAAAA,EAAZ,CAAepB,SAAeoB,EAAAA,GAAAA,EAAEpB,SAAT,CAAmBjB,IAAK0C,WAJ1C,EAQF,SAASC,EAAON,EAAGO,GACjB5B,OAAAA,EAAIT,IAAIS,EAAIV,IAAI+B,EAAEtB,SAAU6B,EAAE7B,WAAa6B,EAAE/B;;ACvDtD,aAFA,IAAA,EAAA,QAAA,UAEAgC,SAAS,OAAQ,WACfC,GAAG,uBAAwB,WACrBT,IAAAA,GAAI,EAAR,EAAA,OACAU,OAAOV,EAAExB,QAAQmC,QAAQ,QAG3BF,GAAG,oCAAqC,WAClCT,IAAAA,GAAI,EAAR,EAAA,OACAU,OAAOV,EAAEvB,MAAMkC,QAAQX,EAAExB,OAASwB,EAAExB,UAGtCiC,GAAG,gCAAiC,WAC9BT,IAAAA,GAAI,EAAR,EAAA,OACAU,OAAOV,EAAEtB,UAAUiC,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,MAGzC6C,GAAG,gCAAiC,WAC9BT,IAAAA,GAAI,EAAR,EAAA,OACAU,OAAOV,EAAEpB,UAAU+B,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,MAGzC6C,GAAG,wCAAyC,WACtCT,IAAAA,GAAI,EAAR,EAAA,OACAU,OAAOV,EAAEtB,UAAUiC,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvC8C,OAAOV,EAAEpB,UAAU+B,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvCoC,GAAI,EAAKA,EAAAA,MAAAA,EAAG,EAAG,IACfU,OAAOV,EAAEtB,UAAUiC,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvC8C,OAAOV,EAAEpB,UAAU+B,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,MAGzC6C,GAAG,6BAA8B,WAC3BT,IAAAA,GAAI,EAAR,EAAA,OACAA,EAAEpB,SAAW,CAAEjB,EAAG,EAAGC,GAAI,GACzB8C,OAAOV,EAAEtB,UAAUiC,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvC8C,OAAOV,EAAEpB,UAAU+B,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvCoC,GAAI,EAAKA,EAAAA,MAAAA,EAAG,EAAG,IACfU,OAAOV,EAAEtB,UAAUiC,QAAQ,CAAEhD,EAAG,EAAGC,GAAI,IACvC8C,OAAOV,EAAEpB,UAAU+B,QAAQ,CAAEhD,EAAG,GAAKC,GAAI","file":"ball.test.js","sourceRoot":"../src","sourcesContent":["/**\n * A vector (math) implementation, bleh!\n */\nexport function neu(a, bi) {\n  return { a: a, bi: bi };\n}\nexport function dot(v1, v2) {\n  return v1.a * v2.a + v1.bi * v2.bi;\n}\nexport function add(v1, v2) {\n  return neu(v1.a + v2.a, v1.bi + v2.bi);\n}\nexport function sub(v1, v2) {\n  return neu(v1.a - v2.a, v1.bi - v2.bi);\n}\nexport function abs(v1) {\n  return Math.sqrt(v1.a * v1.a + v1.bi * v1.bi);\n}\nexport function mul(v1, u) {\n  return neu(v1.a * u, v1.bi * u);\n}\n","/**\n * A pool ball.\n */\nimport * as vec from \"./vector\";\n\nconst BALL_RADIUS = 0.029;\n\nexport function neu() {\n  return {\n    radius: BALL_RADIUS,\n    mass: BALL_RADIUS * BALL_RADIUS,\n    position: vec.neu(0, 0),\n    velocity: vec.neu(0, 0)\n  };\n}\n\nexport function move(ball, delta, alpha) {\n  let dt = vec.mul(ball.velocity, delta);\n  let pos = vec.add(ball.position, dt);\n  let vel = vec.mul(ball.velocity, alpha);\n  return { ...ball, position: pos, velocity: vel };\n}\n\nexport function bounce(b1, b2) {\n  var posDiff = vec.sub(b2.position, b1.position);\n  var velDiff = vec.sub(b2.velocity, b1.velocity);\n  var dp1 = vec.dot(velDiff, posDiff);\n  var dist = vec.abs(vec.sub(b1.position, b2.position));\n  var bounds = b2.radius + b1.radius;\n  if (dp1 < 0 && dist < bounds) {\n    var force = (2 * b2.mass) / (b1.mass + b2.mass);\n    var dp2 = vec.dot(velDiff, posDiff) / vec.dot(posDiff, posDiff);\n    var q = vec.mul(posDiff, dp2);\n    var b1v = vec.add(b1.velocity, vec.mul(q, force));\n    var b2v = vec.sub(b2.velocity, vec.mul(q, force));\n    return [{ ...b1, velocity: b1v }, { ...b2, velocity: b2v }];\n  }\n  return [b1, b2];\n}\n\nexport function wall(b, x, y, dim) {\n  var vv = b.velocity.bi;\n  var hv = b.velocity.a;\n  if (\n    (b.position.bi - b.radius < dim && vv < 0) ||\n    (b.position.bi + b.radius > y - dim && vv > 0)\n  ) {\n    return { ...b, velocity: { ...b.velocity, bi: -vv } };\n  } else if (\n    (b.position.a - b.radius < dim && hv < 0) ||\n    (b.position.a + b.radius > x - dim && hv > 0)\n  ) {\n    return { ...b, velocity: { ...b.velocity, a: --hv } };\n  }\n}\n\nexport function pocket(b, p) {\n  return vec.abs(vec.sub(b.position, p.position)) < p.radius;\n}\n","import { neu, move, collide } from \"./ball\";\n\ndescribe(\"ball\", () => {\n  it(\"has a default radius\", () => {\n    let b = neu();\n    expect(b.radius).toEqual(0.029);\n  });\n\n  it(\"has a mass that is radius squared\", () => {\n    let b = neu();\n    expect(b.mass).toEqual(b.radius * b.radius);\n  });\n\n  it(\"has a default position vector\", () => {\n    let b = neu();\n    expect(b.position).toEqual({ a: 0, bi: 0 });\n  });\n\n  it(\"has a default velocity vector\", () => {\n    let b = neu();\n    expect(b.velocity).toEqual({ a: 0, bi: 0 });\n  });\n\n  it(\"does not move a ball without velocity\", () => {\n    var b = neu();\n    expect(b.position).toEqual({ a: 0, bi: 0 });\n    expect(b.velocity).toEqual({ a: 0, bi: 0 });\n    b = move(b, 2, .5);\n    expect(b.position).toEqual({ a: 0, bi: 0 });\n    expect(b.velocity).toEqual({ a: 0, bi: 0 });\n  });\n\n  it(\"moves a ball with velocity\", () => {\n    var b = neu();\n    b.velocity = { a: 1, bi: 1 };\n    expect(b.position).toEqual({ a: 0, bi: 0 });\n    expect(b.velocity).toEqual({ a: 1, bi: 1 });\n    b = move(b, 1, 0.2);\n    expect(b.position).toEqual({ a: 1, bi: 1 });\n    expect(b.velocity).toEqual({ a: 0.2, bi: 0.2 });\n  });\n\n});\n"]}